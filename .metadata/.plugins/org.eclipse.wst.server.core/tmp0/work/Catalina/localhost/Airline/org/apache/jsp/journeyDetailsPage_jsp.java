/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-05-16 14:55:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import modelClass.JourneyDetails;
import modelClass.TicketBooking;
import java.util.List;
import modelClass.Login;

public final class journeyDetailsPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("modelClass.Login");
    _jspx_imports_classes.add("modelClass.TicketBooking");
    _jspx_imports_classes.add("modelClass.JourneyDetails");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>JourneyDetails</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");

	Login authentication = (Login) session.getAttribute("userEmail");
	if (authentication == null) {
		response.sendRedirect("login.jsp");
	}
	List<JourneyDetails> journeyDetails = (List<JourneyDetails>) session.getAttribute("journeyList");
	
      out.write("\n");
      out.write("	<div class=\"container\">\n");
      out.write("		<div class=\"row mt-5\">\n");
      out.write("			");

			for (JourneyDetails journey : journeyDetails) {
			
      out.write("\n");
      out.write("			<!-- Left card -->\n");
      out.write("			<div class=\"col-md-5 mb-4\">\n");
      out.write("				<div class=\"card custom-card\">\n");
      out.write("					<div class=\"card-body\">\n");
      out.write("						<h5 class=\"card-title\">Journey Details</h5>\n");
      out.write("						<table class=\"table\">\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>User Name:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getUserName());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Flight Name:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getFlightName());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Destination:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getDestination());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Source:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getSource());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Amount:</strong></td>\n");
      out.write("								<td>$");
      out.print(journey.getAmount());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Flight Number:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getFlightNumber());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Time:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getTime());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<td><strong>Ticket:</strong></td>\n");
      out.write("								<td>");
      out.print(journey.getProcess());
      out.write("</td>\n");
      out.write("							</tr>\n");
      out.write("						</table>\n");
      out.write("						");

						if (journey.getProcess().equals("booked")) {
						
      out.write("\n");
      out.write("\n");
      out.write("						<a href=\"TicketCancelledServlet?id=");
      out.print(journey.getId());
      out.write("\"\n");
      out.write("							class=\"btn btn-danger\">cancel</a>\n");
      out.write("						");

						}
						
      out.write("\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			");

			}
			
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
